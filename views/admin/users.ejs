<main id="main" class="main container-fluid py-4">
  <div class="pagetitle">
    <h1>Users Management</h1>
  </div>

  <section class="section">
    <div class="row">
      <div class="col-lg-12">
        <div class="card">
          <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-3">
              <h5 class="card-title">Users List</h5>
              <div class="d-flex gap-2">
                <button
                  type="button"
                  class="btn btn-outline-secondary btn-sm"
                  id="exportBtn"
                >
                  <i class="bi bi-download"></i> Export
                </button>
                <button
                  type="button"
                  class="btn btn-primary btn-sm"
                  data-bs-toggle="modal"
                  data-bs-target="#addUserModal"
                >
                  <i class="bi bi-plus-circle"></i> Add User
                </button>
              </div>
            </div>

            <!-- Users Table -->
            <table class="table table-striped datatable" id="usersTable">
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Email</th>
                  <th>Phone</th>
                  <th>Gender</th>
                  <th>Role</th>
                  <th>Credits</th>
                  <th data-type="date" data-format="YYYY/MM/DD">Created</th>
                  <th>Actions</th>
                </tr>
              </thead>
              <tbody>
                <% users.forEach(function(user) { %>
                <tr data-id="<%= user._id %>">
                  <td>
                    <a
                      href="/admin/user-details/<%= user._id %>"
                      class="text-black text-decoration-underline"
                    >
                      <%= user.firstName %> <%= user.lastName %>
                    </a>
                  </td>
                  <td><%= user.email %></td>
                  <td><%= user.phone || '-' %></td>
                  <td>
                    <%= user.gender ? user.gender.charAt(0).toUpperCase() +
                    user.gender.slice(1) : '-' %>
                  </td>
                  <td>
                    <span
                      class="badge bg-<%= user.role === 'admin' ? 'primary' : 'secondary' %>"
                    >
                      <%= user.role.charAt(0).toUpperCase() + user.role.slice(1)
                      %>
                    </span>
                  </td>
                  <td>$<%= user.credits != null ? user.credits : 0 %></td>
                  <td>
                    <%= user.createdAt ?
                    user.createdAt.toISOString().slice(0,10).replace(/-/g, '/')
                    : '-' %>
                  </td>
                  <td>
                    <div class="btn-group btn-group-sm">
                      <a
                        href="/admin/user-details/<%= user._id %>"
                        class="btn btn-outline-info"
                        title="View"
                      >
                        <i class="bi bi-eye"></i>
                      </a>
                      <button
                        type="button"
                        class="btn btn-outline-danger"
                        title="Delete"
                      >
                        <i class="bi bi-trash"></i>
                      </button>
                    </div>
                  </td>
                </tr>
                <% }) %>
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  </section>
</main>

<!-- Add User Modal -->
<div
  class="modal fade"
  id="addUserModal"
  tabindex="-1"
  aria-labelledby="addUserModalLabel"
  aria-hidden="true"
>
  <div class="modal-dialog modal-lg">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="addUserModalLabel">Add New User</h5>
        <button
          type="button"
          class="btn-close"
          data-bs-dismiss="modal"
          aria-label="Close"
        ></button>
      </div>
      <form id="addUserForm">
        <div class="modal-body">
          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="firstName" class="form-label"
                  >First Name <span class="text-danger">*</span></label
                >
                <input
                  type="text"
                  class="form-control"
                  id="firstName"
                  name="firstName"
                  minlength="2"
                  maxlength="30"
                />
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="lastName" class="form-label"
                  >Last Name <span class="text-danger">*</span></label
                >
                <input
                  type="text"
                  class="form-control"
                  id="lastName"
                  name="lastName"
                  minlength="2"
                  maxlength="30"
                />
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="email" class="form-label"
                  >Email <span class="text-danger">*</span></label
                >
                <input
                  type="text"
                  class="form-control"
                  id="email"
                  name="email"
                />
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="phone" class="form-label">Phone</label>
                <input
                  type="tel"
                  class="form-control"
                  id="phone"
                  name="phone"
                  pattern="^\+?[0-9]{7,15}$"
                  placeholder="+1234567890"
                />
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="gender" class="form-label">Gender</label>
                <select class="form-select" id="gender" name="gender">
                  <option value="">Select Gender</option>
                  <option value="male">Male</option>
                  <option value="female">Female</option>
                  <option value="other">Other</option>
                </select>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="role" class="form-label"
                  >Role <span class="text-danger">*</span></label
                >
                <select class="form-select" id="role" name="role">
                  <option value="customer">Customer</option>
                  <option value="admin">Admin</option>
                </select>
              </div>
            </div>
          </div>

          <div class="row">
            <div class="col-md-6">
              <div class="mb-3">
                <label for="password" class="form-label"
                  >Password <span class="text-danger">*</span></label
                >
                <input
                  type="password"
                  class="form-control"
                  id="password"
                  name="password"
                  minlength="8"
                />
                <div class="form-text">Minimum 8 characters</div>
              </div>
            </div>
            <div class="col-md-6">
              <div class="mb-3">
                <label for="confirmPassword" class="form-label"
                  >Confirm Password <span class="text-danger">*</span></label
                >
                <input
                  type="password"
                  class="form-control"
                  id="confirmPassword"
                  name="confirmPassword"
                  minlength="8"
                />
              </div>
            </div>
          </div>

          <div class="mb-3">
            <label for="credits" class="form-label">Initial Credits</label>
            <input
              type="number"
              class="form-control"
              id="credits"
              name="credits"
              min="0"
              value="0"
            />
          </div>
        </div>
        <div class="modal-footer">
          <button
            type="button"
            class="btn btn-secondary"
            data-bs-dismiss="modal"
          >
            Cancel
          </button>
          <button type="submit" class="btn btn-primary">Add User</button>
        </div>
      </form>
    </div>
  </div>
</div>

<!-- add user -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const addUserForm = document.getElementById("addUserForm");
    const addUserModal = document.getElementById("addUserModal");
    const usersTableBody = document.querySelector("#usersTable tbody");

    if (addUserForm) {
      addUserForm.addEventListener("submit", async function (e) {
        e.preventDefault();

        // Collect form data
        const firstName = addUserForm.firstName.value.trim();
        const lastName = addUserForm.lastName.value.trim();
        const email = addUserForm.email.value.trim().toLowerCase();
        const phone = addUserForm.phone.value.trim();
        const gender = addUserForm.gender.value;
        const role = addUserForm.role.value;
        const password = addUserForm.password.value;
        const confirmPassword = addUserForm.confirmPassword.value;
        const credits = addUserForm.credits.value;

        // Validation (same style as nav.ejs)
        if (firstName.length < 2 || firstName.length > 30) {
          return showToast({
            text: "First name must be 2–30 characters.",
            status: "error",
          });
        }
        if (lastName.length < 2 || lastName.length > 30) {
          return showToast({
            text: "Last name must be 2–30 characters.",
            status: "error",
          });
        }
        if (!/^\S+@\S+\.\S+$/.test(email)) {
          return showToast({ text: "Invalid email format.", status: "error" });
        }
        if (password.length < 8) {
          return showToast({
            text: "Password must be at least 8 characters long.",
            status: "error",
          });
        }
        if (password !== confirmPassword) {
          return showToast({
            text: "Passwords do not match.",
            status: "error",
          });
        }
        if (phone && !/^\+?[0-9]{7,15}$/.test(phone)) {
          return showToast({ text: "Invalid phone number.", status: "error" });
        }
        if (!role) {
          return showToast({ text: "Role is required.", status: "error" });
        }

        // Prepare payload
        const formData = {
          firstName,
          lastName,
          email,
          phone: phone || undefined,
          gender: gender || undefined,
          role,
          password,
          credits: credits ? Number(credits) : 0,
        };

        try {
          const response = await fetch("/api/user/", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify(formData),
          });
          const result = await response.json();

          showToast({ text: result.message, status: result.status });

          if (result.status === "success" && result.data) {
            // Add new user row to the table
            const user = result.data;
            const tr = document.createElement("tr");
            tr.innerHTML = `
              <td>${user.firstName} ${user.lastName}</td>
              <td>${user.email}</td>
              <td>${user.phone || "-"}</td>
              <td>${
                user.gender
                  ? user.gender.charAt(0).toUpperCase() + user.gender.slice(1)
                  : "-"
              }</td>
              <td><span class="badge bg-${
                user.role === "admin" ? "primary" : "secondary"
              }">${
              user.role.charAt(0).toUpperCase() + user.role.slice(1)
            }</span></td>
              <td>$${user.credits != null ? user.credits : 0}</td>
              <td>${
                user.createdAt
                  ? user.createdAt.slice(0, 10).replace(/-/g, "/")
                  : "-"
              }</td>
              <td>
                <div class="btn-group btn-group-sm">
                  <button type="button" class="btn btn-outline-info" title="View">
                    <i class="bi bi-eye"></i>
                  </button>
                  <button type="button" class="btn btn-outline-warning" title="Edit">
                    <i class="bi bi-pencil"></i>
                  </button>
                  <button type="button" class="btn btn-outline-danger" title="Delete">
                    <i class="bi bi-trash"></i>
                  </button>
                </div>
              </td>
            `;
            usersTableBody.prepend(tr);

            // Reset form
            addUserForm.reset();
            // Close modal (Bootstrap 5)
            const modal =
              bootstrap.Modal.getInstance(addUserModal) ||
              new bootstrap.Modal(addUserModal);
            modal.hide();
          }
        } catch (error) {
          showToast({
            text: error.message || "❗ Something went wrong.",
            status: "error",
          });
        }
      });
    }
  });
</script>

<!-- delete user -->
<script>
  document.addEventListener("DOMContentLoaded", function () {
    const usersTableBody = document.querySelector("#usersTable tbody");

    usersTableBody.addEventListener("click", async function (e) {
      const btn = e.target.closest(".btn-outline-danger");
      if (!btn) return;
      const tr = btn.closest("tr");
      const userId = tr.getAttribute("data-id");
      if (!userId) return;

      if (!confirm("Are you sure you want to delete this user?")) return;

      try {
        const response = await fetch(`/api/user/${userId}`, {
          method: "DELETE",
          headers: { "Content-Type": "application/json" },
        });
        const result = await response.json();
        showToast({ text: result.message, status: result.status });
        if (result.status === "success") {
          tr.remove();
        }
      } catch (error) {
        showToast({
          text: error.message || "❗ Something went wrong.",
          status: "error",
        });
      }
    });
  });
</script>
